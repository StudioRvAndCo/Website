---
import { Icon } from 'astro-icon/components'
import type { TwitchLivestream } from '@types'

export const prerender = false

const livestreamData = await Astro.locals.runtime.env.STORE.get("TWITCH_LIVESTREAM", "json") as TwitchLivestream | null
const isLive = Object.keys(livestreamData || {}).length > 0
---

<style lang="scss">
    a {
        display: inline-flex;
        justify-content: center;
        padding: 1rem 0.55rem;
        transition: color 200ms;
        text-decoration: none;
        color: var(--subtext-color);

        &:hover {
            color: var(--text-color);
        }
    }

    .on-air {
        position: relative;

        &::before,
        &::after {
            content: "";
            position: absolute;
            top: 13px;
            right: 11px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: var(--btn-color);
        }

        &::after {
            animation: pulse-scale 2.6s infinite;
        }

        @keyframes pulse-scale {
            0% {
                opacity: 0.7;
                transform: scale(1);
            }
            100% {
                opacity: 0;
                transform: scale(2.4);
            }
        }
    }
</style>

<a class={isLive && 'on-air' || ''} href="https://twitch.tv/studiorvandco" title="Twitch">
    <Icon name={"fa6-brands:twitch"} />
</a>

<script define:vars={{ isLive, livestreamData }} is:inline>
    if (!isLive) return
    document.dispatchEvent(
        new CustomEvent('twitch', { detail: livestreamData })
    )
</script>
