---
import { getRelativeLocaleUrl } from 'astro:i18n';
import YouTubeStatistics from '@components/defer/YouTubeStatistics.astro'
import Thumbnail from '@assets/img/thumbnail.webp'
import TeaserWebm from '@assets/vid/teaser.webm'
import TeaserMp4 from '@assets/vid/teaser.mp4'
import Translations from '@assets/json/translations.json'

const locale = Astro.currentLocale ?? 'fr'
const translations = Translations[locale as keyof typeof Translations].teaser
---

<article id="teaser">
    <h2>{translations.catchphrase}</h2>
    <section>
        <video autoplay muted loop disablepictureinpicture poster={Thumbnail.src} width="810" height="456">
            <source src={TeaserWebm} type="video/webm" />
            <source src={TeaserMp4} type="video/mp4" />
        </video>

        <div>
            <h3>{translations.numbers}</h3>
            <div>
                <p><span id="nb-members">0</span> {translations.members}</p>
                <p><span id="nb-projects">0</span> {translations.projects}</p>
                <YouTubeStatistics server:defer>
                    <Fragment slot="fallback">
                        <p><span>0</span> {translations.views}</p>
                        <p><span>0</span> {translations.subscribers}</p>
                    </Fragment>
                </YouTubeStatistics>
                <p><span id="nb-years-old">0</span> {translations.years}</p>
            </div>
            <a href={getRelativeLocaleUrl(locale, '#association')} class="btn">{translations.readMore}</a>
        </div>
    </section>
</article>

<script>
    import { CountUp, type CountUpOptions } from 'countup.js'
    import MembersList from '@assets/json/members.json'
    import ProjectsList from '@assets/json/projects.json'
    import type { Member, Project } from '@types'

    const members: Member[] = MembersList
    const projects: Project[] = ProjectsList

    const startDate = new Date('2020-09-09')
    const now = new Date()
    const diffMs = now.getTime() - startDate.getTime()
    const nbYears = Math.abs(new Date(diffMs).getUTCFullYear() - 1970)

    const countUpOptions: CountUpOptions = {
        duration: 3,
        enableScrollSpy: true,
        scrollSpyOnce: true,
        separator: ' ',
        startVal: 0
    }

    new CountUp("nb-members", members.length, countUpOptions)
    new CountUp("nb-projects", projects.length, countUpOptions)
    new CountUp("nb-years-old", nbYears, countUpOptions)
</script>

<style lang="scss">
    #teaser {
        @include max-width(var(--max-width-content));
        padding: var(--spacing) 0;

        h2 {
            margin-bottom: calc(var(--spacing) / 2);
            font-size: 2.2em;
            font-weight: 800;
            text-shadow: 0 0 0.8em var(--bg-color), 0 0 0.2em var(--bg-color);

            &::before,
            &::after {
                content: none;
            }
        }

        section {
            display: grid;
            grid-template-columns: 1.7fr 0.7fr;
            align-items: center;
            justify-content: space-between;
            gap: var(--spacing);

            video {
                object-fit: cover;
                @include box-shadow;
                width: 100%;
                height: 100%;
                border-radius: var(--border-radius);
            }

            > div {
                height: 100%;
                box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%),
                0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);
                background-color: var(--bg-color);
                border-radius: var(--border-radius);
                padding: 1rem;
                display: flex;
                flex-flow: column nowrap;
                align-items: center;
                justify-content: space-between;
                gap: 1rem;

                h3 {
                    text-align: center;
                    font-size: 1.5em;
                }

                .btn {
                    width: 100%;
                }

                > div {
                    width: 100%;
                    height: inherit;
                    background-color: var(--projects-bg-color);
                    border-radius: var(--border-radius);
                    display: flex;
                    flex-flow: column nowrap;
                    align-items: center;
                    justify-content: space-between;
                    gap: 0;

                    p {
                        width: inherit;
                        padding: 0.8rem;
                        position: relative;
                        display: inline-flex;
                        align-items: center;
                        justify-content: center;
                        font-size: 1.2em;
                        gap: 8px;

                        &::after {
                            content: "";
                            position: absolute;
                            left: 2.2em;
                            right: 2.2em;
                            bottom: -1%;
                            height: 2px;
                            border-radius: var(--border-radius);
                            background-color: rgba(255, 255, 255, 0.15);
                        }

                        &:last-of-type::after {
                            content: none;
                        }

                        span {
                            padding-bottom: 2px;
                            font-size: 1.3em;
                            font-weight: 700;
                        }
                    }
                }
            }

            @media (max-width: 950px) {
                display: flex;
                flex-flow: column nowrap;
                gap: 2rem;

                video {
                    height: 280px;

                    @media (max-width: 500px) {
                        height: 100%;
                    }
                }

                > div {
                    width: 100%;
                    align-items: start;

                    @media (max-width: 450px) {
                        align-items: center;
                    }

                    > div {
                        padding: 1.4rem;
                        flex-flow: row wrap;
                        align-items: center;
                        justify-content: space-around;
                        gap: 1.4rem 3rem;

                        p {
                            padding: 0;
                            width: auto;

                            &::after {
                                content: unset;
                            }
                        }
                    }

                    .btn {
                        align-self: center;
                        width: 270px;

                        @media (max-width: 450px) {
                            width: 100%;
                        }
                    }
                }
            }
        }
    }
</style>
